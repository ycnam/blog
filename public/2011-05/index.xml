<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2011-05s on ycnam</title>
    <link>https://ycnam.github.io/2011-05/</link>
    <description>Recent content in 2011-05s on ycnam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Mon, 30 May 2011 13:45:46 +0000</lastBuildDate>
    
	<atom:link href="https://ycnam.github.io/2011-05/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>요즘 미니홈피 다이어리 관련해서 입력폼에 관한 고민을 많이 하다보니 페이스북의 입력폼도</title>
      <link>https://ycnam.github.io/2011-05/2011-05-30--/</link>
      <pubDate>Mon, 30 May 2011 13:45:46 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-30--/</guid>
      <description>요즘 미니홈피 다이어리 관련해서 입력폼에 관한 고민을 많이 하다보니
페이스북의 입력폼도 눈에 들어와서 정리를 해봅니다.
(야근하면서 신나게 페북하다가 그런건 절대 아닙니다)
최근 페북의 입력폼이 좀 달라졌는데, 그 컨셉은 명확하다고 봅니다. 그거슨 바로..
&amp;ldquo;더 빠른 댓글&amp;rdquo; 이겠죠?
이젠 입력 버튼을 누르지 않고, 엔터만 치면 그냥 댓글이 등록되게 되었습니다.
아마도 댓글 영역에선 줄바꿈이 많지 않다는 행태를 보고 바꾼것이 아닐까 합니다.
그렇다고 줄바꿈이 불가능한건 아니고요. Shift + Enter를 누르면 줄바꿈이 가능합니다만
과감하게도 아무런 Cue가 없죠.</description>
    </item>
    
    <item>
      <title>Ruby Exercise 04. ascending/descending sort</title>
      <link>https://ycnam.github.io/2011-05/2011-05-15-ruby-exercise-04-ascendingdescending-sort/</link>
      <pubDate>Sun, 15 May 2011 12:50:27 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-15-ruby-exercise-04-ascendingdescending-sort/</guid>
      <description>오름차순, 내림차순 정렬 실습.
&amp;#13; &amp;#13; $num = Array.new&amp;#13; &amp;#13; def input()&amp;#13; for i in 0..4&amp;#13; print &amp;ldquo;\n비교를 원하는 수를 5개를 입력하세요. (현재 &amp;ldquo;, 5-i, &amp;ldquo;개 남음) : &amp;ldquo;&amp;#13; inp = gets.to_i&amp;#13; $num.push(inp)&amp;#13; end&amp;#13; print &amp;ldquo;\n입력이 완료되었습니다. 입력된 수는 &amp;ldquo;&amp;#13; for i in 0..4&amp;#13; if i == 4&amp;#13; print $num[i]&amp;#13; else&amp;#13; print $num[i], &amp;ldquo;, &amp;ldquo;&amp;#13; end&amp;#13; end&amp;#13; puts &amp;ldquo;입니다.&amp;rdquo;&amp;#13; end&amp;#13; &amp;#13; def ascent(num)&amp;#13; ascendingSort = Array.new&amp;#13; ascendingSort.push(num[0])&amp;#13; for i in 1.</description>
    </item>
    
    <item>
      <title>Ruby Exercise 03. min/max function</title>
      <link>https://ycnam.github.io/2011-05/2011-05-15-ruby-exercise-03-minmax-function/</link>
      <pubDate>Sun, 15 May 2011 12:48:34 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-15-ruby-exercise-03-minmax-function/</guid>
      <description>1. 배열 안에 다섯개의 정수를 입력받은 input()함수
2. 정수 배열 안에서 최대값과 최소값을 Return해주는 함수 min(), max()
3. 그 값을 받아 출력해주는 output()함수
&amp;#13; &amp;#13; &amp;#13; $num = Array.new&amp;#13; &amp;#13; def input()&amp;#13; for i in 0..4&amp;#13; print &amp;ldquo;\n비교를 원하는 수를 5개를 입력하세요. (현재 &amp;ldquo;, 5-i, &amp;ldquo;개 남음) : &amp;ldquo;&amp;#13; inp = gets.to_i&amp;#13; $num.push(inp)&amp;#13; end&amp;#13; print &amp;ldquo;\n입력이 완료되었습니다. 입력된 수는 &amp;ldquo;&amp;#13; for i in 0..4&amp;#13; if i == 4&amp;#13; print $num[i]&amp;#13; else&amp;#13; print $num[i], &amp;ldquo;, &amp;ldquo;&amp;#13; end&amp;#13; end&amp;#13; puts &amp;ldquo;입니다.</description>
    </item>
    
    <item>
      <title>iluvuxdesign by davideandriolo</title>
      <link>https://ycnam.github.io/2011-05/2011-05-11-iluvuxdesign-by-davideandriolo/</link>
      <pubDate>Wed, 11 May 2011 08:53:50 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-11-iluvuxdesign-by-davideandriolo/</guid>
      <description>ILUVUXDESIGN (by davideandriolo)</description>
    </item>
    
    <item>
      <title>&#39;Yahoo UV &gt; Google UV&#39; in March, 2011</title>
      <link>https://ycnam.github.io/2011-05/2011-05-11-yahoo-uv-google-uv-in-march-2011/</link>
      <pubDate>Wed, 11 May 2011 01:11:00 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-11-yahoo-uv-google-uv-in-march-2011/</guid>
      <description>Yahoo! Sites ranked as the #1 property in March with 179.5 million visitors, followed by Google Sites with 176.8 million and Microsoft Sites with 176.4 million. Sites new to the top 50 in March included FoxNews.com (#41), Time Warner (#49) and BuzzMedia (#50).
&amp;#13; 이것은 단지 일시적인 현상?
&amp;#13; 혹은 Search Direct와 Yahoo Livestand의 영향?
&amp;#13; 그보다, 미국에서 야후와 구글의 순방문자수가 거의 비슷했다는 사실이 더 충격..
&amp;#13; -
http://www.comscore.com/Press_Events/Press_Releases/2011/4/comScore_Media_Metrix_Ranks_Top_50_U.S._Web_Properties_for_March_2011http://www.etnews.co.kr/news/detail.html?id=201105060062</description>
    </item>
    
    <item>
      <title>기획자(라 불리는 자)가 갖추어야 할 덕목.</title>
      <link>https://ycnam.github.io/2011-05/2011-05-10--/</link>
      <pubDate>Tue, 10 May 2011 16:26:18 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-10--/</guid>
      <description>1. 내가 불편한 것, 내가 필요한 것을 민감하게 캐치하고, 고치고 만들 수 있어야 한다.
&amp;#13; 2. Communicator : 디자이너 &amp;lt;-&amp;gt; 엔지니어, 사용자 &amp;lt;-&amp;gt; 보스, &amp;hellip;)
&amp;#13; 3. Copyrighter : 민감한 언어능력을 통해 어려운 것을 쉽게, 쉬운 것을 재밌게 쓰기
&amp;#13; 4. Data Based Insight : 데이터를 읽고 창조적으로 해석하기.
&amp;#13; 5. Swift Learner : 뭐든지 빠르게 배우고 그걸 잘 요리해서 내놓을 수 있는 능력.
&amp;#13; 6. 르네상스적 인물 : 다 잘해야됨.</description>
    </item>
    
    <item>
      <title>두꺼운 삶과 얇은 삶(김현/ 뿌리깊은나무, 1978.9) 中</title>
      <link>https://ycnam.github.io/2011-05/2011-05-10--19789-/</link>
      <pubDate>Tue, 10 May 2011 16:23:43 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-10--19789-/</guid>
      <description>아파트가 대중 조작에 가장 적합한 장소라는 것을 알게 된 것은 거기에서였다. 직업이 다르고, 나이가 다르고, 얼굴의 형태가 달라도 거주 공간이 같으면 성격이 비슷해지게 마련인 모양이었다. 나도 내 아내도 옆집 사람들과 같은 텔레비전의 프로그램을 보고 듣고, 같은 밑반찬을 준비하고, 같은 식의 음식을 만들고, 그래서 결국 같은 생각을 하게 되었다.</description>
    </item>
    
    <item>
      <title>88만원 세대 &#43; 콘크리트 유토피아</title>
      <link>https://ycnam.github.io/2011-05/2011-05-07-88-/</link>
      <pubDate>Sat, 07 May 2011 15:03:00 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-07-88-/</guid>
      <description>&#39;88만원 세대&#39;를 읽었던 당시에는 - &#39;짱돌&#39;을 들어야겠다고 생각 했는데, 콘크리트 유토피아를 읽어보니, 우리는 주워서 던질 짱돌하나 없는 아스팔트 위에 서있는게 아닌가 싶기도.</description>
    </item>
    
    <item>
      <title>Quote post</title>
      <link>https://ycnam.github.io/2011-05/2011-05-04-quote-post/</link>
      <pubDate>Wed, 04 May 2011 00:36:41 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-04-quote-post/</guid>
      <description>-from the article &#39;Caving Pixels&#39; by Dmitry Fadeyev : Usability Post
http://www.usabilitypost.com/2011/04/24/carving-pixels/
 Design is a process of stone carving.
 </description>
    </item>
    
    <item>
      <title>Link post</title>
      <link>https://ycnam.github.io/2011-05/2011-05-02-link-post/</link>
      <pubDate>Mon, 02 May 2011 17:38:15 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-02-link-post/</guid>
      <description>http://www.uxbooth.com/blog/mobile-form-design-strategies/?utm_medium=referral&amp;amp;utm_source=pulsenews</description>
    </item>
    
    <item>
      <title>measuring user experience desk</title>
      <link>https://ycnam.github.io/2011-05/2011-05-02-measuring-user-experience-desk/</link>
      <pubDate>Mon, 02 May 2011 02:42:29 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-02-measuring-user-experience-desk/</guid>
      <description>Measuring User Experience. @desk</description>
    </item>
    
    <item>
      <title>홍상수가 롱테이크를 많이 쓰는 이유.</title>
      <link>https://ycnam.github.io/2011-05/2011-05-01--/</link>
      <pubDate>Sun, 01 May 2011 15:44:00 +0000</pubDate>
      
      <guid>https://ycnam.github.io/2011-05/2011-05-01--/</guid>
      <description>Q: 작품에서 롱테이크가 많이 쓰이는데 특별한 이유가 있는지?
&amp;#13; A: 롱테이크를 하지 않고 컷을 끊으려면 좋은 Take를 마스터샷으로 얻은 후 다른 화각에서 같은 장면을 다시 찍어야 한다. 하지만 떨림이 담긴, 그 순간에 맞는 독특한 억양이 섞인, 순간적인 반응에 의한 본능적인 연기를 컷한 후 (화각을 다시 잡고) 배우에게 다시 요구하는건 불가능하다고 본다. 게다가 그런 식으로 요구하다보면 배우들도 방어적이 되어서, 컷한 후 다시 재연할 수 있는 연기만을 하게 된다. &amp;#13; 제12회 전주국제영화제 : Offscreen 옥희의 영화 GV중.</description>
    </item>
    
  </channel>
</rss>